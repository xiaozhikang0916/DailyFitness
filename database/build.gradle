plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin
    alias libs.plugins.ksp
    alias libs.plugins.kapt
}

android {
    namespace 'site.xiaozk.dailyfitness.database'
    compileSdk 34

    defaultConfig {
        minSdk 29
        targetSdk 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.toVersion(libs.versions.java.get())
        targetCompatibility JavaVersion.toVersion(libs.versions.java.get())
    }
    kotlinOptions {
        jvmTarget = libs.versions.java.get()
    }
}
class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        return ["room.schemaLocation=${schemaDir.path}".toString()]
    }
}
ksp {
    arg(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat

    implementation libs.androidx.room.runtime

    implementation libs.android.hilt.lib
    kapt libs.android.hilt.compiler

    // To use Kotlin Symbol Processing (KSP)
    ksp libs.androidx.room.compiler

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation libs.androidx.room.ktx

    implementation libs.datetime

    implementation project(":repository")
}